name: CI to Docker Hub
on:
  push:
    branches: [ master, workflow ]

jobs:
  lint_test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app_python/requirements_dev.txt

#      - name: Format Checking
#        run: |
#          isort --diff --check-only ./app_python/
#          python -m black --check --diff ./app_python/

      - name: Test with pytest
        run: pytest


  build:
    needs: [lint_test]
    runs-on: ubuntu-latest

    env:
      username: ${{ secrets.DOCKER_HUB_USERNAME }}
      password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      pythonapp: devops_app_python

    steps:
    
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{env.username}}
          password: ${{env.password}}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./app_python/
          file: ./app_python/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.username }}/${{env.pythonapp}}:latest
          cache-from: type=registry,ref=${{env.username}}/${{env.pythonapp}}:buildcache
          cache-to: type=registry,ref=${{env.username}}/${{env.pythonapp}}:buildcache,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

